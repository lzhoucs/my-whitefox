* QMK
** Env setup
My setup is based on the official docs before major rework:
https://github.com/qmk/qmk_firmware/pull/8252, more specifically, before this commit [[https://github.com/qmk/qmk_firmware/pull/8252/commits/5b3fb61b4eb8aad4e5a55cd6ca354004e96fcac8][a701c15d8 * Rework the newbs guide around
the qmk cli]], which can still be accessed at: https://github.com/qmk/qmk_firmware/blob/4ef10a424ae1174bc108de9014dfd1f0ff6751e0/docs/newbs.md
** Build steps
   1. From ~$QMK_REPO/keyboards/whitefox/keymaps~, create a symbolic link
      pointing to ~qmk-keymaps~ dir
      #+BEGIN_SRC sh
ln -fs $KBD/qmk-keymaps/ lzhoucs
      #+END_SRC
   2. Run ~./build-qmk.sh~
** Issue and workaround
- RESET doesn't work
  See: [[https://github.com/qmk/qmk_firmware/issues/6112][open issue]], also
  [[https://www.reddit.com/r/olkb/comments/8jfyzd/qmk_reset_and_magic_key_bootloader_not_working/][here
  too]]
** References
    - [[https://matt3o.com/how-to-build-your-whitefox/][Some info on whitefox qmk support]]
    - [[https://deskthority.net/viewtopic.php?f=7&t=14010&sid=8e3b7fa0546189ec11c018eb290c8d5e][WhiteFox on TMK]] and [[https://www.reddit.com/r/MechanicalKeyboards/comments/8glvw5/help_whitefox_is_not_happy_with_my_tmk/][reddit source]]
    - [[https://github.com/kiibohd/controller/issues/163][How does this(kiibohd) compare to TMK firmware?]]
    - [[https://albertogrespan.com/blog/mk/flashing-qmk-on-a-whitefox/][Flashing QMK on a WhiteFox Mechanical Keyboard]]
    - [[https://docs.qmk.fm/#/keycodes][Keycodes]]
    - [[https://docs.qmk.fm/#/config_options][Config Options]]
    - [[https://config.qmk.fm/][QMK Web Configurator]]
    - [[https://www.keebtalk.com/t/show-me-your-favorite-qmk-hacks/2682][QMK Hacks]]
    - [[https://www.reddit.com/r/olkb/comments/a0texz/whatre_your_favorite_qmk_hacks/][QMK Hacks 2]]
* KLL
** Dependencies
   - https://github.com/kiibohd/controller/
   - https://github.com/kiibohd/kll
** Key programmings(mappings)
*** Get the USB Keycode
  The following way works for me. Go to [[https://configurator.input.club/][configurator]], inspect a particular key to get the key mapping:
  [[file:images/keycode.png]] 

  Then add double quotes. For example `CONS:MUTE` from the inspector becomes `CONS:"MUTE"` to be used in final key mapping
*** Tips and tricks
| Title                                           | Configurator  | kll file                                                 |
|-------------------------------------------------+---------------+----------------------------------------------------------|
| Clear a key so it falls through previous layers | Use ~CLR-KEY~ | Not do anything (make sure the key definition not exist) |
| Clear a key so it do nothing                    | Use ~None~    | NONE, see: 5.2.2 None                                    |

** Build steps
*** Old way (no longer works after pipenv)
  - From ~../kiibohd-controller/kll/layouts~ dir, create symbolic link myklls pointing to ~./kll~ dir
  - Modify ~../kiibohd-controller/Keyboards/whitefox.bash~ to add any kll files in ~./kll/~
  - Run ~./build-whitefox.sh~

*** New way
*Note*: This require fix: https://github.com/kiibohd/controller/commit/5dd72c2b5b36cd9c33e9d1061ece96a0b0c770ea

Step 1 and 2 are only required once in an OS major version update. E.g darwin18
vs darwin19.
Step 3 is only required when new layer files are added.

   1. Run ~./build-kll.sh~ once to generate ~../kiibohd-controller/Keyboards/<BuildDir>~.
     Note: ~BuildDir~ varies by os and other conditions. e.g: ~darwin18.MyWhiteFoxBuild.gcc.ninja~
   2. From the ~BuildDir~: ~../kiibohd-controller/Keyboards/<BuildDir>~, create symbolic link ~~myklls~ pointing to ~./klls~ dir
      #+BEGIN_SRC sh
ln -s ../../../my-whitefox/klls/ myklls
      #+END_SRC
   3. Modify ~../kiibohd-controller/Keyboards/whitefox.bash~ to add any kll files in ~./kll/~
   4. Rerun ~./build-kll.sh~ or use ~./build-kll.sh -f~ for fast mode build.
** TODOs
- Output layout json as part of the build process
** References
*** Key bindings
   - https://github.com/kiibohd/KiiConf/issues/25#issuecomment-181032765
   - https://github.com/kiibohd/KiiConf/wiki/Function-Layers
*** Hack into kiibohd
   - Adding New Capabilities to Kiibohd: http://atlanis.net/blog/adding-new-capabilities-to-kiibohd/


* Flash steps
The flash steps are the same for both KLL and QMK keymaps. Whether to flash KLL
or QMK is controlled by env variable ~FLASH_TARGET~ found in ~.env~ file

** Approach 1(with virtual keyboard)
  After build is done, enter ~./flash-v1.sh~ in command line, but before hitting <ENTER>, first enter flash mode, then use virtual keyboard to hit enter.
** Approach 2(without virtual keyboard)
  After build is done, run ~./flash-v2.sh~ in command line. Then enter flashMode with your key combination(`DELELE` + `ESC` for example)
* Good ideas
  - holding "c" could actually work as "control + c": https://github.com/kiibohd/kll/issues/23#issuecomment-410558660
